# FeedFathom Coding Style Rules

## Core Formatting
- 2 space indentation
- Double quotes for strings, single quotes for JSX/Svelte attributes
- Semicolons and trailing commas required

## TypeScript Standards
- Strict mode enabled
- No `any` types - use proper type definitions
- No unused variables (except `_` prefixed)
- Use `satisfies` over `as`, `??` over `||`
- Use branded types, readonly, and const assertions
- Discriminated unions for state management

## Svelte Guidelines
- One component per file with typed props
- Use actions for DOM events and slots for composition
- Reactive statements for derived state

## Testing & Quality
- Unit tests for utilities, integration for features
- E2E tests for critical paths
- Test error states and edge cases
- Proper cleanup in `onDestroy`

## Security & Documentation
- Sanitize inputs, validate API responses
- Parameterized queries and rate limiting
- Document complex logic and types

## lint process
1. `bunx --bun prettier --write ./src`
2. `bun test`
3. `bunx --bun tsc`
4. `bunx --bun eslint ./src --fix`
5. `bunx --bun svelte-check --tsconfig ./tsconfig.json`


## File Structure
```
src/
  ├── lib/           # Shared utilities
  ├── components/    # Reusable components
  ├── routes/        # SvelteKit routes
  ├── types/         # TypeScript types
  └── util/          # small utility functions
tests/              # Test files
```
